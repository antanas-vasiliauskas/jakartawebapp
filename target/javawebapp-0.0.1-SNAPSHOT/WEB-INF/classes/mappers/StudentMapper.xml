<!-- StudentMapper.xml -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.StudentMapper">
  <!-- Result mapping for Student, including association to University -->
  <resultMap id="StudentResultMap" type="com.example.Student">
    <id property="id" column="id"/>
    <result property="name" column="name"/>
    <!-- Map the many-to-one relationship: Student.university -->
    <association property="university" javaType="com.example.University" column="university_id" 
                 select="selectUniversityById"/>
    <!-- The above uses a nested select to fetch the University by ID -->
  </resultMap>

  <!-- Select queries -->
  <select id="selectById" parameterType="int" resultMap="StudentResultMap">
    SELECT id, name, university_id 
    FROM student 
    WHERE id = #{id}
  </select>
  <select id="selectAll" resultMap="StudentResultMap">
    SELECT id, name, university_id 
    FROM student
  </select>
  <!-- Helper select for nested association -->
  <select id="selectUniversityById" parameterType="int" resultType="com.example.University">
    SELECT id, name FROM university WHERE id = #{id}
  </select>

  <!-- Insert, Update, Delete -->
  <insert id="insert" parameterType="com.example.Student">
    INSERT INTO student(name, university_id) 
    VALUES(#{name}, #{university.id})
  </insert>
  <update id="update" parameterType="com.example.Student">
    UPDATE student SET name = #{name}, university_id = #{university.id}
    WHERE id = #{id}
  </update>
  <delete id="deleteById" parameterType="int">
    DELETE FROM student WHERE id = #{id}
  </delete>
</mapper>
